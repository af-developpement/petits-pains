name: CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: app_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3

      #- name: Setup PHP
      #  uses: shivammathur/setup-php@v2
      #  with:
      #    php-version: '8.2'
      #    extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, json, mbstring
          
      #- name: Copy .env.test
      #  run: php -r "file_exists('.env.test') || copy('.env.test.example', '.env.test');"
        
      #- name: Install Dependencies
      #  run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        
      #- name: Directory Permissions
      #  run: chmod -R 777 var/
        
      #- name: Create Database
      #  run: |
      #    php bin/console doctrine:database:create --env=test --if-not-exists
      #    php bin/console doctrine:schema:create --env=test
          
      #- name: PHPStan
      #  run: vendor/bin/phpstan analyse src tests
        
      #- name: PHP_CodeSniffer
      #  run: vendor/bin/phpcs src/
        
      #- name: PHPUnit
      #  run: vendor/bin/phpunit
        
  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd /root/app/petits-pains
            git pull origin main
            composer install --no-dev --optimize-autoloader
            php bin/console cache:clear
            php bin/console doctrine:migrations:migrate --no-interaction
            php bin/console assets:install
