name: CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: app_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, json, mbstring
          
      - name: Copy .env.test
        run: php -r "file_exists('.env.test') || copy('.env.test.example', '.env.test');"
        
      - name: Install Dependencies
        run: composer update -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        
      - name: Create var directory and set permissions
        run: |
          mkdir -p var
          chmod -R 777 var/

      - name: Update .env.test
        run: |
          echo "DATABASE_URL=mysql://root:password@127.0.0.1:3306/app_test?serverVersion=8.0" >> .env.test

      - name: Wait for MySQL
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"3306" --silent; do
            sleep 1
          done

      - name: Create Database
        run: |
          php bin/console doctrine:database:create --env=test --if-not-exists
          php bin/console doctrine:schema:create --env=test
          
      - name: PHPStan
        run: vendor/bin/phpstan analyse
        
      - name: PHP_CodeSniffer
        run: vendor/bin/php-cs-fixer fix
        
      - name: PHPUnit
        run: vendor/bin/phpunit
        
  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    environment: PROD
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            set -e  # Arrête le script si une commande échoue
            echo "Starting deployment..."
            cd /root/app/petits-pains
            echo "Current directory: $(pwd)"
            
            # Configuration Git pour le répertoire
            git config --global --add safe.directory /root/app/petits-pains
            
            # Git operations
            echo "Git status before fetch:"
            git status
            git fetch origin
            git reset --hard origin/master
            git clean -fd
            echo "Git status after reset:"
            git status
            
            # Permissions
            sudo chown -R www-data:www-data .
            sudo chmod -R 775 var/
            
            # Composer and Symfony
            composer update --no-dev --optimize-autoloader
            php bin/console doctrine:migrations:migrate --no-interaction
            php bin/console doctrine:schema:validate
            php bin/console cache:clear
            
            # Vérification finale
            echo "Deployment completed"
            echo "Current commit hash:"
            git rev-parse HEAD

      - name: Verify Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd /root/app/petits-pains
            echo "Application version:"
            php bin/console about
            echo "Database status:"
            php bin/console doctrine:schema:validate

